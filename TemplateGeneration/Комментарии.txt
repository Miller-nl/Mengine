
https://github.com/paubric/python-sirajnet дополнение к генерации запросов.
ОЧЕНЬ КРУТАЯ ШТУКА




Есть сценарий, когда часть запросов или иных данных у нас уже есть, и нам надо "предзаполнить генератор".
Функционал для этого будет сделан в TemplateGeneration.DataContainers.GeneratedSet, а не в генераторе.
В самом генераторе оставим только воспроизведение запросов.



Или такой предподготовщик будет вообще вынесен в отдельную функцию, которая будет подготавливать объекты
типа GeneratedObject и передавать их в GeneratedSet. Скорее всего, этот вариант предпочтителен.


+ надо продумать в "мозгах" генератора - как и какие параметры запрашивать у объектов.




1. Отдельный менеджер генерации для запросов и отдельный для тестов
2. У сгенерировано объекта надо как то восстановить фразу и маппинг. Скорее всего, менеджер генерации запросов
    переопределит немного класс, добавив для этого две проперти или функции, которые по запросу будут это считать
    (статичный параметр делать не надо!)

3. Над подготовщик ом dto сделать класс для парсинга. встроить постобпаботку: для директа - конвертация поданного
    series во фрейм и заполнение столбца "parsed parameter" для обеих частот, если выбраны обе
    (в инит для каждой по параметру)
И отдельно "похожие запросы"

4. Аналогично с серп

Чтобы на выходе отдавались объекты в контейнере... И они шли дальше на обработку


Сделать функцию: экспорта в csv

Частоты хранить как параметры на знаниях value и сгенеренных объектах.
Считаем, что снятие у всех одинаковое.

Вопрос: а если регионов несколько - как быть с частотой?? Очень просто - несколько процессингов

Так как все будет настроено на работу с конкретным регионом!!!

3. Подготовщик выдаст контейнер с объектами статистики директа. Но! Менеджер уже внутри себя перенесет нужные параметры
Кроме того - в объект для парсинга надо вставить ключ (стандартный)

Для опознавания контейнера

Ключ создастся сам по настройке дто.Подготовщика

(или будет передан явно)
