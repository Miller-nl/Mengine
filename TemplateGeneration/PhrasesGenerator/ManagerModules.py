'''
Оставить тут только оценщики. Разные оценщики

И менеджер просто будет подгружать оценкщик в зависимости от настройки и давать ему
"имя параметра", который будет использоваться в качесвте результата оценки.
    Если оценщик хочет использовать ещё параметры - пожалуйста. Он может их заюзать прямо на объектах.

    Единственный нюанс: комада к оценке должна быть у всех одинаковой.

'''

# Генератор и GeneratedSet встречаются только(!) тут!
from Managers.ProcessesManager import ProcessesManager

# Модули для парсинга

#  Модули для обработки
from TemplateGeneration.GeneratedSet import GeneratedSet  # Сам набор

# Модули для API

clipping_constant = 12  # минимальная базовая частота продолжения генерации
Wb_min = 6  # минимальная базовая частота для парсинга фазовой частоты при финальном парсинге

# ----------------------------------------------------------------------------------------------------
# Модуль оценки элементов ----------------------------------------------------------------------------
# ----------------------------------------------------------------------------------------------------

class Estimator:
    '''
    Смысл класса - оценка и разметра данных из сета.

    У класса будет ссылка на сет и указаны параметры сгенерированных объектов, которые он дёргает.
    Если понадобятся доп объекты для оценки, граф например, они будут тут.

    Кроме того, именно Estimator даёт разрешения на парсинг и прочие манипуляции.
    '''

    def __init__(self, generated_set: GeneratedSet,
                 process_manager: ProcessesManager, launch_module_name: str = None,
                 generate_clipping_constant: int or float = 12,
                 generate_assessment_type: str = 'constant'):
        '''
        Когда после появится "умная оценка".
        :param launch_module_name: имя вызывающего модуля
        :param process_manager: менеджер процесса
        :param generated_set: сгенерированный набор
        :param generate_clipping_constant: "константа" запрета генерации. Может быть связана с чем угодно.
        :param generate_assessment_type: тип оценки. Доступные типы:
            "constant" - оценка по исключительно базовой частоте. Если она меньше generate_clipping_constant,
                генерация запрещается.
        '''

        # Установим логер
        self.__my_name = process_manager.get_module_name(my_name=self.__class__.__name__,
                                                         launch_module_name=launch_module_name)
        self.__Logger = process_manager.create_logger(module_name=self.__my_name,
                                                      log_initialization=False)
        self.__to_log = self.__Logger.to_log  # Установим функцию логирования

        # Установим данные набора
        self.__GeneratedSet = generated_set

        # Установим данные об оценке
        self.__generate_clipping_constant = generate_clipping_constant
        self.__generate_assessment_type = generate_assessment_type

    # ----------------------------------------------------------------------------------------------------
    # Разрешения генерации -------------------------------------------------------------------------------
    # ----------------------------------------------------------------------------------------------------

    def allow_generation(self) -> bool:
        '''
        Функция обходит элементы набора, разрешая или запрещая генерацию по ним через параметр "detailing_allowed"
        Функция работает над самим набором.
        :param :
        :return: статус отсутствия ошибок
        '''

        return True

    def __constant_allowing(self):
        '''
        Функция делает оценку по константе.
        :return: статус отсутствия ошибок
        '''

        self.__GeneratedSet

        return

    # ----------------------------------------------------------------------------------------------------
    # Разрешения на парсинг ------------------------------------------------------------------------------
    # ----------------------------------------------------------------------------------------------------

    # базовой, фазовой, SERP


    # ----------------------------------------------------------------------------------------------------
    # Более сложные оценки -------------------------------------------------------------------------------
    # ----------------------------------------------------------------------------------------------------
    '''
    Оценки могут делаться любые.
    На данный момент работают только:
        разрешение на генерацию
        разрешение на парсинг W baz, W faz, SERP и т.п.

    '''

    # Функция, работающая с графом пересчитывает граф перед началом работы

