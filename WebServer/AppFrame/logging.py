
def logging_wrapper(message: str,
                    function_name: str or bool = True,
                    logging_level: int or str = 'DEBUG',
                    error_type: type or None = None,
                    raise_error: bool = False,
                    logging_data: object = None,
                    exception: tuple or bool = True,
                    trace: list or bool = False,
                    **kwargs) -> bool or None:
    '''
    Функция для отправки сообщений на сервер логирования.

    :param message: сообщение для логирования
    :param function_name: имя вызывающей функции
    :param logging_level: тип сообщения в лог. Число или:
                            DEBUG	Подробная информация, как правило, интересна только при диагностике проблем.

                            INFO	Подтверждение того, что все работает, как ожидалось.

                            WARNING	Указание на то, что произошло что-то неожиданное или указание на проблему в
                                    ближайшем будущем (например, «недостаточно места на диске»).
                                    Программное обеспечение все еще работает как ожидалось.

                            ERROR	Из-за более серьезной проблемы программное обеспечение
                                    не может выполнять какую-либо функцию.

                            CRITICAL	Серьезная ошибка, указывающая на то,
                                    что сама программа не может продолжить работу.
    :param error_type: тип ошибки, если требуется. Позволит поднять её после обработки сообщения.
    :param raise_error: поднять ли ошибку?
    :param logging_data: dto объект, который будет залогирован. Обычно содержит информацию о данных,
        обрабатывающихся в скриптах. Список/словарь - то, что можно перегнать в json
    :param exception: данные об ошибке. Или это tuple, полученный от sys.exc_info(), состоящий из
        всех трёхэлементов, или True - указание на запрос ошибки внутри функции логирования.
        Если этот параметр не False, то trace игнорируется
    :param trace: список объектов следа, полученный через traceback.extract_stack(), или указание на запрос
        следа внутри функции. Если задан exception_mistake, то trace игнорируется.
    :param kwargs: дополнительные параметры, который уйдeт на логирование в json. Если названия параметров
        совпадут  с индексами в data, то индексы, находившиеся в data будут перезаписаны значениями kwargs
    :return: статус отправки сообщения: True - все успешно, False - кто-то упал, None - ушло только
        в контенер с проваленными.
    '''


    return